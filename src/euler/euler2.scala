package euler

/**
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 * 
 */
object euler2 {
	
  def nextFib(list : scala.collection.mutable.ListBuffer[Int]) : Int = {    
    list += list(list.size - 2 ) + list(list.size -1 )    
    list(list.size-1)
  }
  
  def main(args : Array[String] ) {
    
    var fibs = scala.collection.mutable.ListBuffer(1,2)
    
    
    while ( nextFib(fibs) <= 4000000 ) { }
    
    val result : Int = fibs.filter(e => e % 2 == 0 ).foldLeft(0) ( (total,num ) => total + num )
    println(result)
        
     
    
  }
}